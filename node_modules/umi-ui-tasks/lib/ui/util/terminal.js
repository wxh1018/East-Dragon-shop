"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTerminalIns = void 0;

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function _react() {
    return data;
  };

  return data;
}

var _enums = require("../../server/core/enums");

function _xtermAddonWebLinks() {
  const data = require("xterm-addon-web-links");

  _xtermAddonWebLinks = function _xtermAddonWebLinks() {
    return data;
  };

  return data;
}

function _xtermAddonFit() {
  const data = require("xterm-addon-fit");

  _xtermAddonFit = function _xtermAddonFit() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const _window = window,
      Terminal = _window.Terminal;

function initTerminal() {
  const terminal = new Terminal({
    allowTransparency: true,
    theme: {
      background: '#15171C',
      foreground: '#ffffff73'
    },
    fontFamily: `operator mono,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace`,
    cursorBlink: false,
    cursorStyle: 'underline',
    disableStdin: true
  });
  terminal.loadAddon(new (_xtermAddonWebLinks().WebLinksAddon)());
  terminal.loadAddon(new (_xtermAddonFit().FitAddon)());
  return terminal;
}

const TASKS = [_enums.TaskType.BUILD, _enums.TaskType.DEV, _enums.TaskType.LINT, _enums.TaskType.TEST, _enums.TaskType.INSTALL];
const TERMINAL_MAPS = {};

const getTerminalIns = (taskType, key) => {
  if (!key || !taskType) {
    return null;
  }

  if (TERMINAL_MAPS[key]) {
    return TERMINAL_MAPS[key][taskType];
  }

  TERMINAL_MAPS[key] = {};
  TASKS.forEach(taskType => {
    TERMINAL_MAPS[key][taskType] = initTerminal();
  });
  return TERMINAL_MAPS[key][taskType];
};

exports.getTerminalIns = getTerminalIns;