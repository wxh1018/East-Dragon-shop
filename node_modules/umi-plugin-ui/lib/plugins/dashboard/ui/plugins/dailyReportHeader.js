"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _swr = _interopRequireDefault(require("swr"));

var _antd = require("antd");

var _dailyReport = require("./dailyReport");

var _context2 = _interopRequireDefault(require("../context"));

var _dailyReportModule = _interopRequireDefault(require("./dailyReport.module.less"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var useState = React.useState,
    useEffect = React.useEffect;

var DailyReportHeader = function DailyReportHeader(props) {
  var _React$useContext = React.useContext(_context2.default),
      api = _React$useContext.api;

  var _ = api._,
      event = api.event,
      moment = api.moment;

  var _useSWR = (0, _swr.default)('zaobao.list', function _callee() {
    var _ref, data;

    return regeneratorRuntime.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return regeneratorRuntime.awrap(api.callRemote({
              type: 'org.umi.dashboard.zaobao.list'
            }));

          case 2:
            _ref = _context.sent;
            data = _ref.data;
            return _context.abrupt("return", data);

          case 5:
          case "end":
            return _context.stop();
        }
      }
    });
  }),
      list = _useSWR.data;

  var handleOnChange = function handleOnChange(value) {
    event.emit(_dailyReport.MESSAGES.CHANGE_DAILY_ID, value);
  };

  return React.createElement("div", {
    className: _dailyReportModule.default['select-wrapper']
  }, Array.isArray(list) && React.createElement(_antd.Select, {
    className: _dailyReportModule.default.select,
    defaultValue: _.get(list, '0.id'),
    onChange: handleOnChange
  }, (list || []).map(function (item) {
    return React.createElement(_antd.Select.Option, {
      key: "".concat(item.id),
      value: item.id
    }, moment(item.createdAt).format('YYYY-MM-DD'));
  })));
};

var _default = DailyReportHeader;
exports.default = _default;