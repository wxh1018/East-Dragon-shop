"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useTerminal = void 0;

function _react() {
  const data = _interopRequireWildcard(require("react"));

  _react = function _react() {
    return data;
  };

  return data;
}

function _xtermAddonFit() {
  const data = require("xterm-addon-fit");

  _xtermAddonFit = function _xtermAddonFit() {
    return data;
  };

  return data;
}

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const useTerminal = ({
  terminal,
  ref: container
}) => {
  const fitAddon = new (_xtermAddonFit().FitAddon)();
  (0, _react().useEffect)(() => {
    if (!container) {
      return;
    }

    terminal.loadAddon(fitAddon);
    terminal.open(container);
    fitAddon.fit();
  }, [container]);
  return {
    fitAddon
  };
};

exports.useTerminal = useTerminal;